pipeline {
    agent any

    stages {
        stage('List Branches') {
            steps {
                script {
                    // Define the Git repository URL and credentials
                    def gitRepoUrl = 'https://your-git-repo-url.git'
                    def gitCredentialsId = 'your-credentials-id' // Set the ID of the stored credentials in Jenkins

                    // Input step to select a branch
                    def branchName = input(
                        id: 'userInput',
                        message: 'Select a Git branch',
                        parameters: [choice(name: 'BRANCH', choices: getGitBranches(gitRepoUrl, gitCredentialsId), description: 'Select a branch to build')],
                        submitterParameter: 'APPROVER',
                        submitter: 'user',
                        allowEmpty: false
                    )

                    // Checkout the selected branch
                    checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: gitCredentialsId, url: gitRepoUrl]]])
                }
            }
        }
        stage('Build') {
            steps {
                // Your build steps go here
                sh 'echo "Building the selected branch"'
                // Replace with actual build commands
            }
        }
    }
}

def getGitBranches(gitRepoUrl, credentialsId) {
    def branches = []
    try {
        // Fetch the list of branches using 'git ls-remote'
        def branchList = sh(script: "git ls-remote --heads ${gitRepoUrl}", returnStdout: true, returnStatus: true)
        if (branchList == 0) {
            // Split branch names by line and add them to the 'branches' list
            branches = sh(script: "git ls-remote --heads ${gitRepoUrl} | awk -F/ '{print $3}'", returnStdout: true).split()
        } else {
            echo 'Error: Unable to fetch branches'
        }
    } catch (Exception e) {
        echo "Error: ${e.getMessage()}"
    }
    return branches
}
