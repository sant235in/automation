pipeline {
    agent any

    stages {
        stage('Select Branch') {
            steps {
                script {
                    // Get the list of Git branches using 'git ls-remote'
                    def gitBranches = sh(
                        script: 'git ls-remote --heads <your-git-repo-url>',
                        returnStdout: true
                    ).trim()

                    // Split the list into an array of branch names
                    def branchList = gitBranches.split('\n').collect {
                        it.split('\t')[1].replace('refs/heads/', '')
                    }

                    // Prompt the user to select a branch
                    def selectedBranch = input(
                        id: 'branchSelection',
                        message: 'Select a Git branch to build:',
                        parameters: [choice(
                            choices: branchList.join('\n'),
                            description: 'Select the branch to build.'
                        )]
                    )

                    // Perform your build steps here using the selectedBranch
                    echo "Selected Git branch: $selectedBranch"
                    // Run your build steps using the selected branch
                }
            }
        }
    }
}
